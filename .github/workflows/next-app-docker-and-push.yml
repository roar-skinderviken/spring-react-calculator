name: next-app run tests, build and push Docker

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'next-app/**'

  pull_request:
    paths:
      - 'next-app/**'

env:
  REGISTRY: ghcr.io
  APP_NAME: next-app

jobs:
  next_app_run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run tests with Gradle
        run: ./gradlew -p next-app runJest --build-cache --info

  next_app_build_and_push_docker:
    needs: next_app_run_tests
    if: ${{ startsWith(github.ref, 'refs/tags/') }}

    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract repository owner
        id: extract_repo
        run: |
          echo "REPO_OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)" >> $GITHUB_ENV

      - name: Set Docker image environment variable
        run: |
          # Construct the Docker image name using extracted owner
          echo "DOCKER_IMAGE=${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.APP_NAME }}:${{ github.ref_name }}" >> $GITHUB_ENV

      # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: ./next-app
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false # to avoid unknown/unknown
          tags: ${{ env.DOCKER_IMAGE }}
