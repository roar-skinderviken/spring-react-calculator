name: Build auth-server Docker and push

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'auth-server/**'

  pull_request:
    paths:
      - 'auth-server/**'

env:
  REGISTRY: ghcr.io
  APP_NAME: auth-server
  TAG: ${{ format('main-{0}', github.event.pull_request.head.sha || github.sha) }}

jobs:
  build_and_push_docker:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract repository owner
        id: extract_repo
        run: |
          echo "REPO_OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)" >> $GITHUB_ENV

      - name: Set docker image env var
        run: |
          echo "DOCKER_IMAGE=${REGISTRY}/${REPO_OWNER}/${APP_NAME}:${TAG}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build --build-cache --info

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: ./auth-server
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false # to avoid unknown/unknown
          tags: |
            ${{ env.DOCKER_IMAGE }}
            ${{ env.DOCKER_IMAGE }}-gh${{ github.run_id }}